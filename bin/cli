#!/usr/bin/env php
<?php

/*
ROOT_PATH=/usr/share/gini
APP_PATH=/var/lib/gini-apps/hello
GN_DEBUG=0/1
*/

$root_path = realpath(isset($_SERVER['ROOT_PATH']) ? $_SERVER['ROOT_PATH'] : (dirname(__FILE__).'/..'));
$_SERVER['ROOT_PATH'] = $root_path;

$phar_path = $root_path.'system.phar';
if (is_file($phar_path)) {
	define('SYS_PATH', 'phar://'.$root_path.'/system.phar/');
}
else {
	define('SYS_PATH', $root_path.'/system/');
}

if (isset($_SERVER['GN_DEBUG']) && $_SERVER['GN_DEBUG']) {
	define('DEBUG', 1);
}

require SYS_PATH.'class/gini/bootstrap.php';

function setup() {
	global $argc, $argv;
	// $argv包括了我们的cli标准脚本, 因此需要删除
	$argc--;
	array_shift($argv);
}

function shutdown() {

	$cli = $GLOBALS['GINI.CURRENT_CLI'];

	$func = "\\CLI\\$cli::shutdown";
	if (is_callable($func)) {
		call_user_func($func);
	}

}

function exception($e) {

	$cli = $GLOBALS['GINI.CURRENT_CLI'];

	$func = "\\CLI\\$cli::exception";
	if (is_callable($func)) {
		call_user_func($func, $e);
	}
	else {
		$message = $e->getMessage();
		$file = \Model\File::relative_path($e->getFile());
		$line = $e->getLine();
		fprintf(STDERR, "\e[314mERROR\e[0m \e[1m%s\e[0m (\e[34m%s\e[0m:$line)\n", $message, $file, $line);
		if (defined('DEBUG')) {
			$trace = array_slice($e->getTrace(), 1, 3);
			foreach ($trace as $n => $t) {
				fprintf(STDERR, "%3d. %s%s() in %s on line %d\n", $n + 1,
								$t['class'] ? $t['class'].'::':'', 
								$t['function'],
								\Model\File::relative_path($t['file']),
								$t['line']);

			}

			fprintf(STDERR, "\n");
		}
	}
}

function main($argc, $argv) {
	$cli = strtolower($argv[0]);
	$GLOBALS['GINI.CURRENT_CLI'] = $cli;
	
	if ($cli) {

		$func = "\\CLI\\$cli::main";
		if (is_callable($func)) {
			call_user_func($func, $argc, $argv);
		}
		else {
			throw new ErrorException("missing $func()!");
		}
	}
	else {
		//enter interactive mode
		\Model\Shell::main();
	}

}

